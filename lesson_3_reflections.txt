When would you want to use a remote repository rather than keeping all your work
local?

    - Backup, sharing

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    - Control
    - Keeps local version in a completely known state if you are community coding.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Fork: special type of clone, done directly on GitHub
    Clone: Copy of repository from another location (e.g., from GitHub or another location)
    Branch: Within single repository, parallel development tracks.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    Redundancy, ability to work offline.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Harder:
      - Merging code changes
      - Ensuring everyone is working on their own and latest version
      - Keeping a dev track separate from master
      - Bug fixes

    Easier:
      - Nothing

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Bugs, features, removing code, experiments, versions
